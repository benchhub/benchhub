// Code generated by gommon from pkg/central/job/gommon.yml DO NOT EDIT.

package job

import dlog "github.com/dyweb/gommon/log"

func (m *Manager) SetLogger(logger *dlog.Logger) {
	m.log = logger
}

func (m *Manager) GetLogger() *dlog.Logger {
	return m.log
}

func (m *Manager) LoggerIdentity(justCallMe func() *dlog.Identity) *dlog.Identity {
	return justCallMe()
}

func (p *Planner) SetLogger(logger *dlog.Logger) {
	p.log = logger
}

func (p *Planner) GetLogger() *dlog.Logger {
	return p.log
}

func (p *Planner) LoggerIdentity(justCallMe func() *dlog.Identity) *dlog.Identity {
	return justCallMe()
}

func (exc *AgentExecutor) SetLogger(logger *dlog.Logger) {
	exc.log = logger
}

func (exc *AgentExecutor) GetLogger() *dlog.Logger {
	return exc.log
}

func (exc *AgentExecutor) LoggerIdentity(justCallMe func() *dlog.Identity) *dlog.Identity {
	return justCallMe()
}

func (exc *MockExecutor) SetLogger(logger *dlog.Logger) {
	exc.log = logger
}

func (exc *MockExecutor) GetLogger() *dlog.Logger {
	return exc.log
}

func (exc *MockExecutor) LoggerIdentity(justCallMe func() *dlog.Identity) *dlog.Identity {
	return justCallMe()
}

func (exc *EchoExecutor) SetLogger(logger *dlog.Logger) {
	exc.log = logger
}

func (exc *EchoExecutor) GetLogger() *dlog.Logger {
	return exc.log
}

func (exc *EchoExecutor) LoggerIdentity(justCallMe func() *dlog.Identity) *dlog.Identity {
	return justCallMe()
}

func (exc *LocalExecutor) SetLogger(logger *dlog.Logger) {
	exc.log = logger
}

func (exc *LocalExecutor) GetLogger() *dlog.Logger {
	return exc.log
}

func (exc *LocalExecutor) LoggerIdentity(justCallMe func() *dlog.Identity) *dlog.Identity {
	return justCallMe()
}
