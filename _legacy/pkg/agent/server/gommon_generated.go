// Code generated by gommon from pkg/agent/server/gommon.yml DO NOT EDIT.

package server

import dlog "github.com/dyweb/gommon/log"

func (srv *GrpcServer) SetLogger(logger *dlog.Logger) {
	srv.log = logger
}

func (srv *GrpcServer) GetLogger() *dlog.Logger {
	return srv.log
}

func (srv *GrpcServer) LoggerIdentity(justCallMe func() *dlog.Identity) *dlog.Identity {
	return justCallMe()
}

func (srv *HttpServer) SetLogger(logger *dlog.Logger) {
	srv.log = logger
}

func (srv *HttpServer) GetLogger() *dlog.Logger {
	return srv.log
}

func (srv *HttpServer) LoggerIdentity(justCallMe func() *dlog.Identity) *dlog.Identity {
	return justCallMe()
}

func (mgr *Manager) SetLogger(logger *dlog.Logger) {
	mgr.log = logger
}

func (mgr *Manager) GetLogger() *dlog.Logger {
	return mgr.log
}

func (mgr *Manager) LoggerIdentity(justCallMe func() *dlog.Identity) *dlog.Identity {
	return justCallMe()
}

func (b *Beater) SetLogger(logger *dlog.Logger) {
	b.log = logger
}

func (b *Beater) GetLogger() *dlog.Logger {
	return b.log
}

func (b *Beater) LoggerIdentity(justCallMe func() *dlog.Identity) *dlog.Identity {
	return justCallMe()
}

func (s *StateMachine) SetLogger(logger *dlog.Logger) {
	s.log = logger
}

func (s *StateMachine) GetLogger() *dlog.Logger {
	return s.log
}

func (s *StateMachine) LoggerIdentity(justCallMe func() *dlog.Identity) *dlog.Identity {
	return justCallMe()
}
